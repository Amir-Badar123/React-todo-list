{"ast":null,"code":"import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from '../actions/actionsTypes';\nconst INITIAL_DATA = [];\n\nconst TodoReducer = (state = INITIAL_DATA, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }];\n\n    case TOGGLE_TODO:\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n\n    case REMOVE_TODO:\n      const numIndex = parseInt(action.id);\n      return state.filter(todo => todo.id !== numIndex);\n\n    default:\n      return state;\n  }\n};\n\nexport default TodoReducer;","map":{"version":3,"sources":["C:/Users/amirb/Downloads/To-Do-App-React-Redux-master/To-Do-App-React-Redux-master/src/reducers/TodoReducer.js"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_TODO","INITIAL_DATA","TodoReducer","state","action","type","id","text","completed","map","todo","numIndex","parseInt","filter"],"mappings":"AACA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAkD,yBAAlD;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACF,YAAP,EAAqBG,MAArB,KAAgC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AACA,aAAO,CACH,GAAGK,KADA,EACM;AACLG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADN;AAELC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFR;AAGLC,QAAAA,SAAS,EAAE;AAHN,OADN,CAAP;;AAOA,SAAKR,WAAL;AACA,aAAOG,KAAK,CAACM,GAAN,CAAUC,IAAI,IACpBA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAApB,GACI,EAAC,GAAGI,IAAJ;AAAUF,QAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAA3B,OADJ,GAEIE,IAHG,CAAP;;AAKA,SAAKX,WAAL;AACA,YAAMY,QAAQ,GAAGC,QAAQ,CAACR,MAAM,CAACE,EAAR,CAAzB;AACA,aAAOH,KAAK,CAACU,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYK,QAAjC,CAAP;;AACA;AACA,aAAOR,KAAP;AAnBJ;AAqBH,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["\nimport { ADD_TODO, REMOVE_TODO, TOGGLE_TODO} from '../actions/actionsTypes'\n\nconst INITIAL_DATA = []\n\nconst TodoReducer = (state=INITIAL_DATA, action) => {\n    switch (action.type){\n        case ADD_TODO:\n        return [\n            ...state,{\n                id: action.id,\n                text: action.text,\n                completed: false,\n            }\n        ]\n        case TOGGLE_TODO:\n        return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, completed: !todo.completed}\n          : todo\n         )\n        case REMOVE_TODO:\n        const numIndex = parseInt(action.id)\n        return state.filter(todo => todo.id !== numIndex);\n        default:\n        return state\n    }\n}\n\nexport default TodoReducer"]},"metadata":{},"sourceType":"module"}